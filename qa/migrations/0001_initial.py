# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-28 10:06
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit_autosuggest.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('entities', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('content', models.TextField(help_text='Please enter an answer in no more than 1000 letters', validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='\u05ea\u05d5\u05db\u05df')),
                ('rating', models.IntegerField(default=0, verbose_name='rating')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('unislug', models.CharField(blank=True, editable=False, max_length=140, null=True, verbose_name='unicode slug')),
                ('subject', models.CharField(max_length=140, verbose_name='question')),
                ('content', models.TextField(blank=True, default=b'', help_text='Please enter your content in no more than 1000 letters', validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='details')),
                ('rating', models.IntegerField(default=1, verbose_name='rating')),
                ('flags_count', models.IntegerField(default=0, verbose_name='flags counter')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('entity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='entities.Entity', verbose_name='entity')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='qa.Question')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionUpvote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upvotes', to='qa.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upvotes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qa.Question')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qa_taggedquestion_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=taggit_autosuggest.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='qa.TaggedQuestion', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='qa.Question', verbose_name='question'),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together=set([('unislug', 'entity')]),
        ),
    ]
